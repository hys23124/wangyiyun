[{"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\index.js":"1","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\App.js":"2","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\reportWebVitals.js":"3","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\components\\sort.jsx":"4","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\components\\home.jsx":"5","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\components\\cart.jsx":"6","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\pages\\index.jsx":"7","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\pages\\list.jsx":"8","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\pages\\play.jsx":"9","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\views\\search.jsx":"10","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\views\\hotRank.jsx":"11","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\views\\recommend.jsx":"12","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\assets\\js\\remScale.js":"13","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\util\\axios\\index.js":"14","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\util\\axios\\axios.js":"15"},{"size":309,"mtime":1611886985962,"results":"16","hashOfConfig":"17"},{"size":681,"mtime":1611902607585,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":231,"mtime":1611885747145,"results":"20","hashOfConfig":"17"},{"size":231,"mtime":1611885686023,"results":"21","hashOfConfig":"17"},{"size":234,"mtime":1611885732869,"results":"22","hashOfConfig":"17"},{"size":1483,"mtime":1611902624601,"results":"23","hashOfConfig":"17"},{"size":544,"mtime":1611902050043,"results":"24","hashOfConfig":"17"},{"size":6387,"mtime":1612357870690,"results":"25","hashOfConfig":"17"},{"size":3513,"mtime":1612268677730,"results":"26","hashOfConfig":"17"},{"size":2069,"mtime":1612269448464,"results":"27","hashOfConfig":"17"},{"size":2208,"mtime":1612089760566,"results":"28","hashOfConfig":"17"},{"size":753,"mtime":1611888942826,"results":"29","hashOfConfig":"17"},{"size":870,"mtime":1612351506857,"results":"30","hashOfConfig":"17"},{"size":345,"mtime":1611907869902,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"rlc5nr",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\index.js",[],["69","70"],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\App.js",[],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\reportWebVitals.js",[],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\components\\sort.jsx",[],["71","72"],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\components\\home.jsx",[],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\components\\cart.jsx",[],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\pages\\index.jsx",[],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\pages\\list.jsx",[],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\pages\\play.jsx",["73","74","75","76"],"import React,{Component} from 'react';\r\n// 引入核心库\r\nimport axios from 'axios';\r\n// 引入jQuery库\r\nimport jq from 'jquery';\r\n// 引入封装好的接口\r\nimport {getSongUrl,getLyric,getMusicDetail} from '../util/axios'\r\n// 引入原生node api方法\r\nimport qsString from 'querystring'\r\n\r\nimport \"../assets/css/play.css\";\r\nimport Img from \"../assets/images/needle-ip6.png\";\r\nclass Play extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            img:Img,\r\n            bgImg:\"\",\r\n            songName:\"\",\r\n            singer:\"\",\r\n            songUrl:\"\",\r\n            lyric:\"\",\r\n            playTime:'00:00',\r\n            flag:false //标识位，用来操控音乐的播放\r\n        }\r\n        // 创建音乐播放器的ref\r\n        this.audio = React.createRef();\r\n        // 创建一个音乐图标的ref\r\n        this.playIcon = React.createRef();\r\n    }\r\n    componentDidMount(){\r\n        // 获取query参数\r\n        // console.log(this.props,'query参数');\r\n        let query = this.props.location.search.slice(1);\r\n        query = qsString.parse(query);\r\n        // console.log(query);\r\n        axios.all([\r\n            getMusicDetail({ids:query.id}),\r\n            getSongUrl({id:query.id}),\r\n            getLyric({id:query.id})\r\n        ]).then(\r\n            axios.spread((detail,songUrl,lyric)=>{\r\n                if(detail.code==200){\r\n                    this.setState({\r\n                        bgImg:detail.songs[0].al.picUrl,\r\n                        songName:detail.songs[0].name,\r\n                        singer:detail.songs[0].ar[0].name\r\n                    })\r\n                }\r\n                if(songUrl.code==200){\r\n                    this.setState({\r\n                        songUrl:songUrl.data[0].url\r\n                    })\r\n                }\r\n                if(lyric.code==200){\r\n                    let lyricInfo = lyric.lrc.lyric\r\n                    // 定义正则，去除[]\r\n                    let reg = /\\[(.*?)](.*)/g\r\n                    console.log(lyricInfo,'歌词歌词歌词');\r\n                    let obj = {}\r\n                    lyricInfo.replace(reg,(a,b,c)=>{\r\n                        b = b.slice(0,5)\r\n                        obj[b] = c\r\n                    })\r\n                    console.log(obj,'对象');\r\n                    this.setState({\r\n                        lyric:obj\r\n                    },()=>{\r\n                        // 获取到audio属性\r\n                        console.log(this.audio.current,'audio属性');\r\n                        let audio = this.audio.current\r\n                        // 实时监控音乐播放器\r\n                        audio.ontimeupdate = ()=>{\r\n                            console.log(audio.currentTime,'正在播放事件');\r\n                            let nowTimer = this.formateTime(audio.currentTime);\r\n                            console.log(nowTimer,'正在播放时间');\r\n                            // 去除没有歌词的时间\r\n                            if(nowTimer in this.state.lyric){\r\n                                this.setState({\r\n                                    playTime:nowTimer,\r\n                                },()=>{\r\n                                    // 调用歌词滚动\r\n                                    this.moveLyric();\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        )\r\n    }\r\n    // 封装时间转化函数\r\n    formateTime(timer){\r\n        let minutes = (Math.floor(timer/60)+'').padStart(2,\"0\");\r\n        let seconds = (Math.floor(timer%60)+'').padStart(2,\"0\")\r\n        return `${minutes}:${seconds}`\r\n    }\r\n    // 封装一个动态歌词滚动事件\r\n    moveLyric(){\r\n        let active = document.getElementsByClassName('active')[0]\r\n        let index = jq('.geci_box').children().index(active);\r\n        // 设置初始位移值31\r\n        let offSet = 31;\r\n        // 超出值就加上translateY\r\n        if(active.offsetTop>offSet){\r\n            jq(\".geci_box\").css(\"transform\", `translateY(-${index * offSet}px)`);\r\n        }\r\n    }\r\n    // 音乐播放\r\n    toPlay(){\r\n        this.setState({\r\n            flag:!this.state.flag\r\n        },()=>{\r\n            // flag为真，音乐暂停，出现图标\r\n            if(this.state.flag){\r\n                this.playIcon.current.style.display = 'block'\r\n                this.audio.current.pause()\r\n            }else{\r\n                this.audio.current.play()\r\n                this.playIcon.current.style.display = 'none'\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { img, bgImg, songName, singer, songUrl, lyric,playTime } = this.state;\r\n        return (\r\n            <div className='play'>\r\n                <div className=\"play_top\">\r\n                    <img src={img} alt=\"\"/>\r\n                </div>\r\n                <div onClick={this.toPlay.bind(this)} className=\"play_img_all\">\r\n                    <i ref={this.playIcon} className=\"play_icon\"></i>\r\n                    <div className=\"play_img_box\">\r\n                        <div className=\"small_img\">\r\n                            <img src={bgImg} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"play_txt\">\r\n                    <div className=\"play_txt_name\">\r\n                        <span>{songName}</span>- <span className=\"singer\">{singer}</span>\r\n                    </div>\r\n                    <div className=\"play_txt_geci\">\r\n                        <div className=\"geci_box\">\r\n                            {\r\n                                Object.entries(lyric).map((item,idx)=>{\r\n                                    if(playTime==item[0]){\r\n                                        return <p className=\"active\" key={idx}>{item[1]}</p>\r\n                                    }else{\r\n                                        return <p key={idx}>{item[1]}</p>;\r\n                                    }\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"audio_box\">\r\n                    <audio ref={this.audio} src={songUrl} autoPlay></audio>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Play","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\views\\search.jsx",["77","78","79","80"],"import React, { Component } from 'react';\r\n// 调取接口\r\nimport { getHotSearch, getSearch } from '../util/axios'\r\n\r\nimport '../assets/css/search.css'\r\nclass Search extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            hotList: [],\r\n            searchResult: [], //搜索的结果列表\r\n        }\r\n        this.val = \"\" //控制删除按钮的显示隐藏\r\n        this.inp = React.createRef(); //ref\r\n    }\r\n    // 组件挂载\r\n    componentDidMount() {\r\n        this.getHotList()\r\n    }\r\n    // 封装一个键盘抬起事件\r\n    keyUp(e) {\r\n        // 把输入的内容赋给val\r\n        this.val = e.target.value;\r\n        if (e.target.value == \"\" || e.keyCode == 32) {\r\n            console.log(this.val);\r\n            this.setState({\r\n                searchResult: [],\r\n            })\r\n            return\r\n        }\r\n        //调取搜索接口\r\n        this.goSearchInfo(e.target.value);\r\n    }\r\n    // 清空事件\r\n    del() {\r\n        // 清空输入框的内容，把搜索结果置空\r\n        this.inp.current.value = \"\"\r\n        this.setState({\r\n            searchResult: [],\r\n        })\r\n    }\r\n    // 封装一个搜索事件\r\n    goSearchInfo(keywords) {\r\n        // 把值赋给input框\r\n        this.inp.current.value = keywords;\r\n        getSearch({ keywords })\r\n            .then(res => {\r\n                console.log(res, '搜索结果');\r\n                if (res.code == 200) {\r\n                    this.setState({\r\n                        searchResult: res.result.songs\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    // 封装一个获取热门搜索的接口事件\r\n    getHotList() {\r\n        getHotSearch()\r\n            .then(res => {\r\n                console.log(res, '热门搜索');\r\n                if (res.code == 200) {\r\n                    this.setState({\r\n                        hotList: res.result.hots\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    // 跳转到播放页\r\n    goPlay(id) {\r\n        this.props.history.push('/play?id=' + id)\r\n    }\r\n    render() {\r\n        const { hotList, searchResult } = this.state\r\n        //当点击热搜列表的时候，实现input有值\r\n        this.val = this.inp.current ? this.inp.current.value : \"\"\r\n        // 定义视图变量\r\n        // 热搜列表\r\n        let hotInfo = (\r\n            <div>\r\n                <h4>热门搜索</h4>\r\n                <ul>\r\n                    {hotList.map(item => {\r\n                        return <span onClick={this.goSearchInfo.bind(this, item.first)} key={item.first}>{\"\"}{item.first}</span>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n        // 搜索列表\r\n        let searchInfo = (\r\n            <ul>\r\n                {searchResult.map(item => {\r\n                    return <li onClick={this.goPlay.bind(this, item.id)} key={item.id}>{item.name}</li>\r\n                })}\r\n            </ul>\r\n        )\r\n        return (\r\n            <div className='search'>\r\n                <div className='input'>\r\n                    <i></i>\r\n                    <input type=\"text\" placeholder='搜索歌曲、歌手、专辑' ref={this.inp} onKeyUp={this.keyUp.bind(this)} />\r\n                    {this.val ? <i onClick={this.del.bind(this)}>X</i> : \"\"}\r\n                </div>\r\n                {/* 判断是否显示搜索列表 */}\r\n                {searchResult.length > 0 ? searchInfo : hotInfo}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Search","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\views\\hotRank.jsx",["81","82"],"import React, { Component } from 'react';\r\n// 引入封装好的接口\r\nimport {hotList} from '../util/axios'\r\n\r\n// 引入静态图片\r\nimport img1 from '../assets/images/1.png'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../assets/css/hotrank.css'\r\nclass HotRank extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            hotList: []\r\n        }\r\n    }\r\n    // 组件挂载\r\n    componentDidMount(){\r\n        this.getHotList();\r\n    }\r\n    // 封装一个获取热门榜单的接口\r\n    getHotList(){\r\n        hotList()\r\n        .then(res=>{\r\n            console.log(res,'热门榜单');\r\n            if(res.code==200){\r\n                this.setState({\r\n                    hotList:res.playlist.tracks.filter((item,i)=>i<20)\r\n                })\r\n            }\r\n        })\r\n    }\r\n    // 跳转播放页\r\n    goPlay(id) {\r\n        this.props.history.push('/play?id='+id)\r\n        // 通过state跳转\r\n        // this.props.history.push({\r\n        //     pathname: '/play',\r\n        //     state:{\r\n        //         id\r\n        //     }\r\n        // })\r\n    }\r\n    render() {\r\n        const { hotList } = this.state\r\n        return (\r\n            <div className='hotlist'>\r\n                <img src={img1} alt=\"\"/>\r\n                <ul>\r\n                    {/* 路由导航跳转 */}\r\n                    {/* {hotList.map(item => {\r\n                        return <Link to={'/play?id='+item.id+'&name='+item.songname} key={item.id}>\r\n                            <li>{item.songname}</li>\r\n                        </Link>\r\n                    })} */}\r\n                    {/* 编程式导航跳转 */}\r\n                    {hotList.map((item,idx) => {\r\n                        return <li onClick={this.goPlay.bind(this,item.id)} key={item.id}>\r\n                            <div className=\"left\">{idx+1}</div>\r\n                            <div className=\"right\">{item.name}</div>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HotRank","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\views\\recommend.jsx",["83"],"import React, { Component } from 'react';\r\n// 引入封装好的接口\r\nimport {personalized} from '../util/axios'\r\n\r\n// import { Switch, Route, Link } from 'react-router-dom'\r\n\r\n// 引入静态图片\r\n// import img1 from '../assets/images/1.jpg'\r\n\r\n// 引入css样式\r\nimport '../assets/css/recommend.css'\r\nclass Recommend extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            songList: []\r\n        }\r\n    }\r\n    // 组件挂载完成\r\n    componentDidMount(){\r\n        this.getPerson();\r\n    }\r\n    // 封装一个获取推荐歌单的方法\r\n    getPerson(){\r\n        personalized({\r\n            limit:6\r\n        })\r\n        .then(res=>{\r\n            // console.log(res,'推荐歌单');\r\n            if(res.code==200){\r\n                this.setState({\r\n                    songList: res.result\r\n                })\r\n            }\r\n        })\r\n    }\r\n    // 跳转到列表页\r\n    goList(id) {\r\n        console.log(this.props, '实现跳转');\r\n        this.props.history.push('/list/'+id)\r\n    }\r\n    render() {\r\n        const { songList } = this.state\r\n        return (\r\n            <div className='recommend'>\r\n                <h2>推荐歌单</h2>\r\n                <ul className='recinfo'>\r\n                    {/* 通过路由导航跳转 */}\r\n                    {/* {\r\n                        songList.map(item => {\r\n                            return <Link to={'/list/'+item.id} key={item.id}>\r\n                                <li>\r\n                                    <img src={item.img} alt=\"\" />\r\n                                    <p>{item.title}</p>\r\n                                </li>\r\n                            </Link>\r\n                        })\r\n                    } */}\r\n                    {/* 通过编程式导航跳转 */}\r\n                    {songList.map(item => {\r\n                        return <li className='reclist' onClick={this.goList.bind(this,item.id)} key={item.id}>\r\n                            <img src={item.picUrl} alt=\"\" />\r\n                            <p>{item.name}</p>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Recommend","F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\assets\\js\\remScale.js",[],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\util\\axios\\index.js",[],"F:\\web前端\\第四阶段\\0104第四阶段\\mine\\day19\\demo\\src\\util\\axios\\axios.js",[],["84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":43,"column":31,"nodeType":"94","messageId":"95","endLine":43,"endColumn":33},{"ruleId":"92","severity":1,"message":"93","line":50,"column":32,"nodeType":"94","messageId":"95","endLine":50,"endColumn":34},{"ruleId":"92","severity":1,"message":"93","line":55,"column":30,"nodeType":"94","messageId":"95","endLine":55,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":147,"column":48,"nodeType":"94","messageId":"95","endLine":147,"endColumn":50},{"ruleId":"92","severity":1,"message":"93","line":24,"column":28,"nodeType":"94","messageId":"95","endLine":24,"endColumn":30},{"ruleId":"92","severity":1,"message":"93","line":24,"column":47,"nodeType":"94","messageId":"95","endLine":24,"endColumn":49},{"ruleId":"92","severity":1,"message":"93","line":49,"column":30,"nodeType":"94","messageId":"95","endLine":49,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":61,"column":30,"nodeType":"94","messageId":"95","endLine":61,"endColumn":32},{"ruleId":"96","severity":1,"message":"97","line":8,"column":10,"nodeType":"98","messageId":"99","endLine":8,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":27,"column":24,"nodeType":"94","messageId":"95","endLine":27,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":30,"column":24,"nodeType":"94","messageId":"95","endLine":30,"endColumn":26},{"ruleId":"86","replacedBy":"100"},{"ruleId":"88","replacedBy":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["102"],["103"],"no-global-assign","no-unsafe-negation"]